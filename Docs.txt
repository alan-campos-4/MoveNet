

###### Pose estimation ######

	/scripts/main.py
performs basic pose estimation using the MoveNet model with TensorFlow on a single camera.

	/scripts/main_stereo.py
is a modified version of main.py that performs pose estimation on both cameras simultaneously.

	/scripts/main_stereo_avg.py
is a modified version of main.py that calcultes the average of every keypoint in the pose detection obtained from both cameras and draws the edges between them.

	/scripts/main_depth.py
is a combination of /scripts/main.py and /scripts/disparity/vpi_and_disparity.py that calculates pose estimation and uses disparity to determine the distance of each point from the camera. 

	/scripts/main_depth_1.py
is a combination of /scripts/main.py and /scripts/disparity/vpi_and_disparity.py that calculates pose estimation alongside disparity from the same stereo camera feed. 






###### Calibration / Rectification ######

	/params/stereo_params_undistort.npz
is a set of parameters created with the script /scripts/calibration/createCalib_undistort.py that corrects the camera to feed to appear regular instead of curved.

	/scripts/disparity/vpi_and_disparity.py
uses the parameters		/params/stereo_params_undistort.npz
to obtain both camera feeds and create a disparity map from them each frame.
Currently the most visually clear.

	/scripts/calibration/visualize_rectification.py
using the parameters		/params/stereo_params_undistort.npz
shows the difference between the rectified and unaltered camera. After adjusting the camera focus and taking a new set of pictures the change is clear.






###### Capture video (terminal) ######

gst-launch-1.0 nvarguscamerasrc sensor-id=0 ! 'video/x-raw(memory:NVMM), width=1280, height=720, framerate=30/1' ! nvvidconv ! nvegltransform ! nveglglessink
gst-launch-1.0 nvarguscamerasrc ! nvvidconv ! videoconvert ! xvimagesink
nvgstcapture-1.0 -m 2 --prev-res 4



###### Capture video (python) ######

export LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1:/usr/lib/aarch64-linux-gnu/libGLdispatch.so.0
python main.py



###### Virtual environment ######

 sudo apt install python3-opencv
 python3 -m venv .venv --system-site-packages
 source venv/bin/activate
> print(cv2.getBuildInformation())
> GStreamer:	YES (1.16.2)


#### TensorFlow ####
After creating virtual environment with opencv:
 pip install numpy
 pip install onnx
 pip install tensorflow
 sudo nano /usr/lib/python3/dist-packages/scipy/sparse/sputils.py	typeDict -> sctypeDict


#### TensorFlow with Nvidia ####
After creating virtual environment with opencv:
 pip install numpy
 pip install wheel
 pip install protobuf==3.20.2
 pip install keras==2.11.0
 pip install google-auth-oauthlib==0.4.6
 pip install h5py==3.7.0
 pip install onnx
 pip install --upgrade pandas	## np.bool depricated
 sudo apt-get install python3-dev
 pip install --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v51 tensorflow==2.11.0+nv23.01
 sudo nano /usr/lib/python3/dist-packages/scipy/sparse/sputils.py	typeDict -> sctypeDict  ## typeDict deprecated

bashrc:
  export LD_PRELOAD=/lib/aarch64-linux-gnu/libGLdispatch.so.0
  









